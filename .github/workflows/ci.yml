name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    name: Test on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    env:
      NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY: ${{ secrets.CLERK_PUBLISHABLE_KEY }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
        with:
          version: "latest"
          run_install: false
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: |
            **/node_modules
            ~/.pnpm/cache
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-
        working-directory: ./insighter
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
        working-directory: ./insighter
      - name: Type check
        run: pnpm run type-check
        working-directory: ./insighter
      - name: Lint
        run: pnpm run lint
        working-directory: ./insighter
      - name: Build Next.js
        run: pnpm run build
        working-directory: ./insighter
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy, rustfmt
      - name: Install Ubuntu dependencies
        if: matrix.os == 'ubuntu-latest'
        working-directory: ./insighter/src-tauri
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.1-dev libgtk-3-dev libappindicator3-dev librsvg2-dev patchelf libsoup-gnome2.4-dev libglib2.0-dev libatk1.0-dev libgtk-4-dev libadwaita-1-dev
      - name: Rust cache
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: "insighter/src-tauri -> target"
      - name: Check Rust formatting
        working-directory: ./insighter/src-tauri
        run: cargo fmt --all -- --check
      - name: Run clippy
        working-directory: ./insighter/src-tauri
        run: cargo clippy -- -D warnings
      - name: Run Rust tests
        working-directory: ./insighter/src-tauri
        run: cargo test --all-features
      - name: Check Tauri build
        working-directory: ./insighter/src-tauri
        run: cargo check --all-features
